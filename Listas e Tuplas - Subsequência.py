# -*- coding: utf-8 -*-
"""sequencia_versao_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IyFGSsmDO_qXw3Ts19XI8JiLv0I-k3kV
"""

'''
Uma sequência pode ser interpretada como uma lista finita de termos. Faça um programa que leia um numero N; em seguida, na linha debaixo, leia todos os elementos de uma sequência de inteiros, armazene-os numa lista e verifique se existe uma subsequência tal que a soma dos termos é N, imprimindo "SIM" em caso positivo e "NAO" em caso negativo.

Obs: uma subsequência é formada pegando uma parte da sequência original, sem pular nenhum termo; por exemplo, se (2,3,4,11,6,7,8) é a nossa sequência, (4,11,6) e (2) são subsequências dela, enquanto que (3,11,6,7) não é.

Entrada: Um inteiro N

Saída: A string SIM, caso haja uma subsequência cuja soma dos termos seja N; caso contrário, imprima a string NAO.
'''

N = int(input())
lista = [int(i) for i in input().split()] # Aplica o metodo split ao input() , retoma uma lista ,  itera a lista aplicando a função int para cada dos seus elementos gerando uma lista com cada elemento com type = int()


# Cria uma função que soma elementos do vetor
def soma(vetor):
  soma = 0
  for i in vetor:
    soma = soma + i
  return soma


# Vamos criar uma função que cria todas as sequencias possiveis baseada na posicao de um elemento do vetor e depois aplica funçãop soma nas listas geradas
# ex (1,2,3) 
# posicao  0     posicao 1    posicao 3      
#1               2             3
#1 ,2            2 3
#1, 2 ,3



somas_possiveis = []

def sequencia(posicao):
  global somas_possiveis # Vamos modificar o escopo global
  ac = posicao         # posicao inicial
  while ac < len(lista):   # enquanto a acumuladora relativa a posicao estiver dentro da lista
    ac = ac + 1 # aplica a posicao seguinte
    somas_possiveis.append((soma(lista[posicao:ac])))   # retorna uma lista [posicao: *ac] onde *ac é a uma variave acumuludara que pecorre até o final da lista  , em seguida soma os elementos dessa lista


# vamos fazer um for para aplicar essa função em cada possicao

for k in range(len(lista)):
  sequencia(k)

if N in somas_possiveis:
  print('SIM')
else:
  print('NAO')